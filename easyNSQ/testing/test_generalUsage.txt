// 登录数据库
login(`admin, `123456)
// 调用模块
use DolphinDBModules::easyNSQ

configFilePath = "<your_path_to>/nsq_sdk_config.ini";


/** 例1 仅从NSQ接收深圳市场snapshot类型的实时行情数据到流数据表，不存储到分区表（流表使用模块提供的默认名字） */

// 初始化环境（清理旧表）
iniNsqEnv()

// 拉起订阅
streamTableNames = subscribeNsq(configFilePath, "snapshot", "sz", saveToDfs=false)

// 检查订阅情况
nsq::getSubscriptionStatus()
select count(*) from objByName(streamTableNames[0])
select top 100 * from objByName(streamTableNames[0])

// 停止订阅
nsq::unsubscribe("snapshot", "sz")

/** 例2 从NSQ接收上海市场的实时行情数据到流数据表，并在分区表中持久化存储（流表和分区表使用模块提供的默认名字） */ 

// 初始化流环境和分布式表
iniNsqEnv()
iniNsqDfs()

// 订阅上海市场orders,trade,snapshot行情数据，并持久化存储
subscribeNsq(configFilePath, "orders", "sh", saveToDfs=true)
subscribeNsq(configFilePath, "trade", "sh", saveToDfs=true)
subscribeNsq(configFilePath, "snapshot", "sh", saveToDfs=true)

// 检查订阅情况
nsq::getSubscriptionStatus()
select * from getStreamingStat().subWorkers where topic like "%DolphinDBModules_easyNSQ%"
select count(*) from objByName("nsqStockOrdersSHStream")
select count(*) from loadTable("dfs://nsqStockOrders", "ordersSH")
select count(*) from objByName("nsqStockTradeSHStream")
select count(*) from loadTable("dfs://nsqStockTrade", "tradeSH")
select count(*) from objByName("nsqStockSnapshotSHStream")
select count(*) from loadTable("dfs://nsqStockSnapshot", "snapshotSH")

// 仅停止orders行情数据的订阅
nsq::unsubscribe("orders", "sh")
nsq::getSubscriptionStatus()

// 停止所有订阅
closeNsqConnection()
nsq::getSubscriptionStatus()

/** 例3.1 停止例2中的订阅后，重新接收上海市场orders数据，保留之前订阅持久化到分区表的数据 */
// 初始化流环境
iniNsqEnv("nsqStockOrdersSHStream")

// 订阅上海市场orders行情数据，并持久化存储
streamTableNames, dbPath, tableNames = subscribeNsq(configFilePath, "orders", "sh", saveToDfs=true)

// 检查订阅情况
nsq::getSubscriptionStatus()
select * from getStreamingStat().subWorkers where topic like "%DolphinDBModules_easyNSQ%"
select count(*) from objByName(streamTableNames[0])
select count(*) from loadTable(dbPath, tableNames[0])

// 停止订阅
nsq::unsubscribe("orders", "sh")

/** 例3.1 停止例2中的订阅后，重新接收上海市场orders数据，且不保留之前订阅持久化到分区表的数据 */

// 初始化流环境和分布式表
iniNsqEnv("nsqStockOrdersSHStream")
iniNsqDfs("dfs://nsqStockOrders", "ordersSH")

// 订阅上海市场orders行情数据，并持久化存储
subscribeNsq(configFilePath, "orders", "sh", saveToDfs=true)

// 检查订阅情况
nsq::getSubscriptionStatus()
select * from getStreamingStat().subWorkers where topic like "%DolphinDBModules_easyNSQ%"
select count(*) from objByName("nsqStockOrdersSHStream")
select count(*) from loadTable("dfs://nsqStockOrders", "ordersSH")

// 停止订阅
nsq::unsubscribe("orders", "sh")

/** 例4.1 从NSQ接收上海和深圳市场的实时行情数据到流数据表，并在分区表中持久化存储，上海市场和深圳市场的数据合并处理（流表和分区表使用模块提供的默认名字） */

// 初始化流环境和分布式表
iniNsqEnv()
iniNsqDfs()

// 订阅上海和深圳市场orders,trade,snapshot行情数据,并持久化存储
subscribeNsq(configFilePath, "orders", ["sh","sz"], merge=true, saveToDfs=true)
subscribeNsq(configFilePath, "trade", ["sh","sz"], merge=true, saveToDfs=true)
subscribeNsq(configFilePath, "snapshot", ["sh","sz"], merge=true, saveToDfs=true)

// 检查订阅情况
nsq::getSubscriptionStatus()
select * from getStreamingStat().subWorkers where topic like "%DolphinDBModules_easyNSQ%"

// 停止订阅
closeNsqConnection()

// 清理流表和分区表
iniNsqEnv()
iniNsqDfs()

/** 例4.2 从NSQ接收上海和深圳市场的实时行情数据到流数据表，并在分区表中持久化存储，上海市场和深圳市场的数据分开处理（流表和分区表使用自定义名字） */

// 初始化流环境和分布式表
iniNsqEnv(["myNsqOrdersSHStream", "myNsqOrdersSZStream", "myNsqTradeSHStream", "myNsqTradeSZStream","myNsqSnapshotSHStream", "myNsqSnapshotSZStream"])
each(iniNsqDfs{"dfs://myNsqOrders"}, `myNsqOrdersSH`myNsqOrdersSZ)
each(iniNsqDfs{"dfs://myNsqTrade"}, `myNsqTradeSH`myNsqTradeSZ)
each(iniNsqDfs{"dfs://myNsqSnapshot"}, `myNsqSnapshotSH`myNsqSnapshotSZ)

// 订阅上海和深圳市场orders,trade,snapshot行情数据,并持久化存储
subscribeNsq(configFilePath, "orders", ["sh","sz"], saveToDfs=true, streamTableNames=["myNsqOrdersSHStream", "myNsqOrdersSZStream"], dbPath="dfs://myNsqOrders", tableNames=["myNsqOrdersSH", "myNsqOrdersSZ"])
subscribeNsq(configFilePath, "trade", ["sh","sz"], saveToDfs=true, streamTableNames=["myNsqTradeSHStream", "myNsqTradeSZStream"], dbPath="dfs://myNsqTrade", tableNames=["myNsqTradeSH", "myNsqTradeSZ"])
subscribeNsq(configFilePath, "snapshot", ["sh","sz"], saveToDfs=true, streamTableNames=["myNsqSnapshotSHStream", "myNsqSnapshotSZStream"], dbPath="dfs://myNsqSnapshot", tableNames=["myNsqSnapshotSH", "myNsqSnapshotSZ"])

// 检查订阅情况
nsq::getSubscriptionStatus()
select * from getStreamingStat().subWorkers where topic like "%DolphinDBModules_easyNSQ%"

// 停止订阅
closeNsqConnection()


