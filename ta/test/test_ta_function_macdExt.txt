#include "setup/settings.txt"
use ta

precision=5
nan=double()
@testing:case="test_ta_function_macdExt_use_ticks1_contextby"
tickTB=loadText(DATA_DIR+"/ticks1.csv")

tick1=exec ta::macdExt(close,12,0,26,0,9,0) from tickTB where sym=`tick1
rs1=([nan, nan, nan, nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan, nan, nan, nan])
assert 1, eqObj(tick1, rs1, precision)

tick2=exec ta::macdExt(close,12,0,26,0,9,0) from tickTB where sym=`tick2
rs2=([        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan, -0.77474359,
        -0.94397436, -1.13935897, -1.31769231, -1.42487179, -1.49621795,
        -1.5124359 , -1.56230769, -1.52166667, -1.48397436, -1.46044872,
        -1.49217949, -1.46942308, -1.46442308, -1.42641026, -1.24679487,
        -0.94666667, -0.71442308, -0.54      , -0.30583333, -0.13897436,
         0.08467949,  0.25762821,  0.44358974,  0.5799359 ,  0.76647436,
         0.97448718,  1.12858974,  1.23467949,  1.28717949,  1.32012821,
         1.33403846,  1.34391026,  1.24846154,  1.15089744,  1.07314103,
         1.01410256,  0.90660256,  0.80641026,  0.72525641,  0.57467949,
         0.41269231,  0.26128205,  0.13897436,  0.00461538, -0.15128205,
        -0.33628205, -0.44782051, -0.58878205, -0.77551282, -0.98217949,
        -1.16179487, -1.22205128, -1.20294872, -1.19923077, -1.21532051,
        -1.16397436, -1.15179487, -1.12179487, -1.07115385, -0.97967949],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,  0.28851852,
         0.08986467, -0.1237037 , -0.34047721, -0.5664245 , -0.80052707,
        -1.00767806, -1.17668091, -1.29925214, -1.37805556, -1.4354416 ,
        -1.47464387, -1.49150285, -1.49589744, -1.48814103, -1.45862536,
        -1.3902208 , -1.30052707, -1.19564103, -1.06735043, -0.9169943 ,
        -0.74431624, -0.55297721, -0.34519943, -0.14222934,  0.04811966,
         0.23577635,  0.42117521,  0.5923433 ,  0.75080484,  0.88807692,
         1.00767806,  1.10771368,  1.1819943 ,  1.22470798,  1.23566952,
         1.22294872,  1.18649573,  1.13307692,  1.06698006,  0.98260684,
         0.87913818,  0.76945157,  0.65701567,  0.5382906 ,  0.40880342,
         0.27070513,  0.13134615, -0.01465812, -0.16467949, -0.31966524,
        -0.4777849 , -0.62900997, -0.76318376, -0.87962251, -0.97729345,
        -1.0568661 , -1.11942308, -1.15789886, -1.1677849 , -1.14754986],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan, -1.06326211,
        -1.03383903, -1.01565527, -0.9772151 , -0.85844729, -0.69569088,
        -0.50475783, -0.38562678, -0.22241453, -0.1059188 , -0.02500712,
        -0.01753561,  0.02207977,  0.03147436,  0.06173077,  0.21183048,
         0.44355413,  0.58610399,  0.65564103,  0.76151709,  0.77801994,
         0.82899573,  0.81060541,  0.78878917,  0.72216524,  0.7183547 ,
         0.73871083,  0.70741453,  0.64233618,  0.53637464,  0.43205128,
         0.3263604 ,  0.23619658,  0.06646724, -0.07381054, -0.16252849,
        -0.20884615, -0.27989316, -0.32666667, -0.34172365, -0.40792735,
        -0.46644587, -0.50816952, -0.51804131, -0.53367521, -0.56008547,
        -0.60698718, -0.57916667, -0.57412393, -0.61083333, -0.66251425,
        -0.68400997, -0.59304131, -0.43976496, -0.31960826, -0.23802707,
        -0.10710826, -0.03237179,  0.03610399,  0.09663105,  0.16787037])
assert 2, eqObj(tick2, rs2, precision)

tick3=exec ta::macdExt(close,12,0,26,0,9,0) from tickTB where sym=`tick3
rs3=([nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan])
assert 3, eqObj(tick3, rs3,precision)

tick4=exec ta::macdExt(close,12,0,26,0,9,0) from tickTB where sym=`tick4
rs4=([        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan, -0.00730769,  0.11173077,
         0.20134615,  0.25737179,  0.30724359,  0.37839744,  0.4050641 ,
         0.38570513,  0.36647436,  0.31378205,  0.26211538,  0.24217949,
         0.22134615,  0.15089744,  0.02685897, -0.10589744, -0.23615385,
        -0.32147436, -0.4399359 , -0.57775641, -0.67147436, -0.68012821,
        -0.74339744, -0.78448718, -0.79237179, -0.84833333, -0.85461538,
        -0.79634615, -0.77480769, -0.80269231, -0.83641026, -0.85070513,
        -0.83314103, -0.92192308, -0.93608974, -0.99737179, -1.05019231,
        -1.07217949, -1.05512821, -1.02153846, -1.04384615, -1.0799359 ,
        -1.04512821, -1.00096154, -0.96967949, -0.86692308, -0.77467949,
        -0.63185897, -0.51628205, -0.3250641 , -0.12147436,  0.04878205,
         0.15064103,  0.20173077,  0.26897436,  0.3425    ,  0.38320513,
         0.37621795,  0.35801282,  0.31891026,  0.31224359,  0.25538462,
         0.19115385,  0.11961538,  0.05410256, -0.04224359, -0.12102564],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan, -0.51058405, -0.39048433,
        -0.27299858, -0.15772792, -0.04671652,  0.05098291,  0.13452991,
         0.20836895,  0.26733618,  0.30301282,  0.31972222,  0.32425926,
         0.32025641,  0.30288462,  0.26382479,  0.20705128,  0.13795584,
         0.06151709, -0.02222934, -0.11554843, -0.21706553, -0.31722934,
        -0.41659544, -0.50674501, -0.58301994, -0.65103989, -0.71027778,
        -0.74987892, -0.7717735 , -0.78635328, -0.80371795, -0.81564103,
        -0.82104701, -0.8354416 , -0.84519231, -0.86105413, -0.88925926,
        -0.92230057, -0.950349  , -0.9709188 , -0.99237892, -1.01980057,
        -1.03349003, -1.04069801, -1.03762108, -1.01725783, -0.98420228,
        -0.93717236, -0.88103276, -0.80116809, -0.69467236, -0.57312678,
        -0.44517094, -0.31501425, -0.18880342, -0.06467236,  0.04811254,
         0.1472792 ,  0.22317664,  0.27210826,  0.30138177,  0.31301994,
         0.31184473,  0.29524929,  0.26320513,  0.21593305,  0.16068376],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,  0.50327635,  0.5022151 ,
         0.47434473,  0.41509972,  0.35396011,  0.32741453,  0.27053419,
         0.17733618,  0.09913818,  0.01076923, -0.05760684, -0.08207977,
        -0.09891026, -0.15198718, -0.23696581, -0.31294872, -0.37410969,
        -0.38299145, -0.41770655, -0.46220798, -0.45440883, -0.36289886,
        -0.32680199, -0.27774217, -0.20935185, -0.19729345, -0.14433761,
        -0.04646724, -0.00303419, -0.01633903, -0.03269231, -0.0350641 ,
        -0.01209402, -0.08648148, -0.09089744, -0.13631766, -0.16093305,
        -0.14987892, -0.1047792 , -0.05061966, -0.05146724, -0.06013533,
        -0.01163818,  0.03973647,  0.0679416 ,  0.15033476,  0.20952279,
         0.30531339,  0.36475071,  0.47610399,  0.57319801,  0.62190883,
         0.59581197,  0.51674501,  0.45777778,  0.40717236,  0.33509259,
         0.22893875,  0.13483618,  0.04680199,  0.01086182, -0.05763533,
        -0.12069088, -0.1756339 , -0.20910256, -0.25817664, -0.2817094 ])
assert 4, eqObj(tick4, rs4, precision)

tick5=exec ta::macdExt(close,12,0,26,0,9,0) from tickTB where sym=`tick5
rs5=([            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
        -2.54743590e-01, -1.35769231e-01, -5.92307692e-02,
         3.39743590e-03,  6.66025641e-02,  1.45192308e-01,
         2.11858974e-01,  2.22500000e-01,  2.43461538e-01,
         2.75705128e-01,  2.76794872e-01,  2.54230769e-01,
         2.73333333e-01,  2.75192308e-01,  2.50448718e-01,
         1.63782051e-01,  6.96153846e-02, -3.23717949e-02,
        -1.19551282e-01, -2.02435897e-01, -3.08974359e-01,
        -3.82564103e-01, -4.43397436e-01, -5.70961538e-01,
        -6.46410256e-01, -7.00320513e-01, -7.82435897e-01,
        -7.95192308e-01, -7.36346154e-01, -6.87692308e-01,
        -6.60448718e-01, -6.54230769e-01, -6.18846154e-01,
        -5.94551282e-01, -5.84807692e-01, -5.32500000e-01,
        -5.13782051e-01, -4.78397436e-01, -4.51282051e-01,
        -4.33653846e-01, -4.47371795e-01, -5.16474359e-01,
        -5.99102564e-01, -6.15512821e-01, -6.36346154e-01,
        -6.69102564e-01, -6.57179487e-01, -6.38846154e-01,
        -5.97692308e-01, -5.38846154e-01, -4.28269231e-01,
        -3.40961538e-01, -2.40384615e-01, -1.30576923e-01,
        -2.99358974e-02,  7.87179487e-02,  1.88012821e-01,
         2.95833333e-01,  4.10448718e-01,  5.12756410e-01,
         5.54038462e-01,  6.25641026e-01,  6.68397436e-01,
         7.05384615e-01,  7.21923077e-01,  6.77179487e-01,
         5.69102564e-01],
       [            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
        -5.80420228e-01, -5.01552707e-01, -4.22314815e-01,
        -3.40420228e-01, -2.56766382e-01, -1.70512821e-01,
        -8.73575499e-02, -1.46723647e-02,  4.92521368e-02,
         1.08190883e-01,  1.54031339e-01,  1.88860399e-01,
         2.18853276e-01,  2.42029915e-01,  2.53725071e-01,
         2.48383191e-01,  2.31396011e-01,  2.00747863e-01,
         1.56830484e-01,  1.03582621e-01,  4.10042735e-02,
        -3.18732194e-02, -1.11716524e-01, -2.02984330e-01,
        -2.93005698e-01, -3.78554131e-01, -4.61894587e-01,
        -5.36965812e-01, -5.96289174e-01, -6.38368946e-01,
        -6.69245014e-01, -6.92670940e-01, -6.97991453e-01,
        -6.92229345e-01, -6.79394587e-01, -6.51623932e-01,
        -6.20356125e-01, -5.91695157e-01, -5.65427350e-01,
        -5.40227920e-01, -5.17243590e-01, -5.05868946e-01,
        -5.06374644e-01, -5.09786325e-01, -5.21324786e-01,
        -5.38582621e-01, -5.58447293e-01, -5.79287749e-01,
        -5.97514245e-01, -6.07678063e-01, -5.97877493e-01,
        -5.69195157e-01, -5.27514245e-01, -4.71317664e-01,
        -4.00299145e-01, -3.18532764e-01, -2.26659544e-01,
        -1.27378917e-01, -2.19017094e-02,  8.26566952e-02,
         1.82101140e-01,  2.78326211e-01,  3.67101140e-01,
         4.48803419e-01,  5.20270655e-01,  5.74622507e-01,
         6.04985755e-01],
       [            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
         3.25676638e-01,  3.65783476e-01,  3.63084046e-01,
         3.43817664e-01,  3.23368946e-01,  3.15705128e-01,
         2.99216524e-01,  2.37172365e-01,  1.94209402e-01,
         1.67514245e-01,  1.22763533e-01,  6.53703704e-02,
         5.44800570e-02,  3.31623932e-02, -3.27635328e-03,
        -8.46011396e-02, -1.61780627e-01, -2.33119658e-01,
        -2.76381766e-01, -3.06018519e-01, -3.49978632e-01,
        -3.50690883e-01, -3.31680912e-01, -3.67977208e-01,
        -3.53404558e-01, -3.21766382e-01, -3.20541311e-01,
        -2.58226496e-01, -1.40056980e-01, -4.93233618e-02,
         8.79629630e-03,  3.84401709e-02,  7.91452991e-02,
         9.76780627e-02,  9.45868946e-02,  1.19123932e-01,
         1.06574074e-01,  1.13297721e-01,  1.14145299e-01,
         1.06574074e-01,  6.98717949e-02, -1.06054131e-02,
        -9.27279202e-02, -1.05726496e-01, -1.15021368e-01,
        -1.30519943e-01, -9.87321937e-02, -5.95584046e-02,
        -1.78062678e-04,  6.88319088e-02,  1.69608262e-01,
         2.28233618e-01,  2.87129630e-01,  3.40740741e-01,
         3.70363248e-01,  3.97250712e-01,  4.14672365e-01,
         4.23212251e-01,  4.32350427e-01,  4.30099715e-01,
         3.71937322e-01,  3.47314815e-01,  3.01296296e-01,
         2.56581197e-01,  2.01652422e-01,  1.02556980e-01,
        -3.58831909e-02])
assert 5, eqObj(tick5,rs5, 3)

maBySym=(exec ta::macdExt(close,12,0,26,0,9,0)[0] as rs0, ta::macdExt(close,12,0,26,0,9,0)[1] as rs1, ta::macdExt(close,12,0,26,0,9,0)[2] as rs2  from tickTB context by sym ).values()
rs00=rs1[0].join(rs2[0]).join(rs3[0]).join(rs4[0]).join(rs5[0])
rs01=rs1[1].join(rs2[1]).join(rs3[1]).join(rs4[1]).join(rs5[1])
rs02=rs1[2].join(rs2[2]).join(rs3[2]).join(rs4[2]).join(rs5[2])
assert 6, eqObj(maBySym, (rs00,rs01,rs02), 3)

@testing:case="test_ta_function_macdExt_ma0"
//50 periods' trading data
close=[1.31096941, 1.30264238, 1.61113023, 1.74477774, 1.19229174,
       1.18422834, 1.22975697, 0.90955086, 0.74515876, 1.60267403,
       1.09760499, 1.91491583, 1.44797879, 0.92671249, 1.650166  ,
       1.30611495, 1.80538802, 1.91171602, 1.08399228, 1.43340616,
       1.00901357, 0.52186359, 1.71815048, 1.21787024, 1.10927426,
       0.78267631, 1.6849011 , 1.32163081, 0.79079304, 1.7044885 ,
       1.03517974, 1.40655617, 0.97886921, 1.19654829, 1.10061065,
       0.88445782, 1.08063318, 1.7860779 , 1.65480217, 1.50524881,
       1.14990589, 1.58424086, 1.51309666, 0.74424052, 1.52159503,
       0.90795193, 1.96280945, 1.57893685, 1.00704181, 1.56333563]
precision=6
fastPeriod=12
slowPeriod=26
signalPeriod=9


maType=0
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL, 		NULL,   -0.03917735, -0.10431022,
        -0.10447089, -0.10620489, -0.01763278, -0.02809577, -0.03504567,
        0.01412118, -0.00659661,  0.04447177,  0.03418171,  0.06257798,
        0.05873806,  0.09390351,  0.1111201 ,  0.13233782,  0.10048883]
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)


@testing:case="test_ta_function_macdExt_ma1"
maType=1
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL, 		NULL,   -0.02911815, -0.03854037,
       -0.06272621, -0.06531108, -0.01031719,  0.02241463,  0.0358736 ,
        0.01766311,  0.03784216,  0.04754538, -0.00672747,  0.01283893,
       -0.02092918,  0.03700102,  0.05134395,  0.01637491,  0.03316762]
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)



@testing:case="test_ta_function_macdExt_ma2"
maType=2
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL, 		NULL,   -0.03592982, -0.04459216,
       -0.06156759, -0.06066539, -0.00316956,  0.03062295,  0.0534604 ,
        0.04724559,  0.06964932,  0.08871175,  0.03948105,  0.05742662,
        0.02070931,  0.07034312,  0.08101814,  0.04017994,  0.04263597]
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)


@testing:case="test_ta_function_macdExt_ma3"
maType=3
ans =take(00F,50)
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)


@testing:case="test_ta_function_macdExt_ma4"
maType=4
ans =take(00F,50)
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)


@testing:case="test_ta_function_macdExt_ma5"
maType=5
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL, 		NULL,    -0.05227979, -0.05172554,
       -0.04526206, -0.04791397, -0.04282339, -0.04571195, -0.02710863,
        0.00075596,  0.0317407 ,  0.09076689,  0.12494938,  0.14147582,
        0.12984926,  0.12351984,  0.11429269,  0.0788615 ,  0.04540289]
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)


@testing:case="test_ta_function_macdExt_ma6"
// different from talib
maType=6
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        NULL,         NULL,         NULL,         NULL,         NULL,
        0.00644195, 0.00650321, 0.03044681, 0.02952157, 0.02858006,
       0.0296961 , 0.02994481, 0.04019094, 0.03779995, 0.04604345,
       0.04571668, 0.05945678, 0.06258177, 0.06154152, 0.0617106]
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
// different from talib
rs[33]=double()
rs[34]=double()
assert 1, eqObj(rs,ans, precision)

@testing:case="test_ta_function_macdExt_ma7"
//to do mama
//maType=7
//ans =take(00F,50)
//rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
//assert 1, eqObj(rs,ans, precision)

@testing:case="test_ta_function_macdExt_ma8"
maType=8
ans =take(00F,50)
rs=ta::macdExt(close,fastPeriod,maType, slowPeriod, maType, signalPeriod,maType)[0]
assert 1, eqObj(rs,ans, precision)
