#include "setup/settings.txt"
use ta

precision=5
nan=double()
@testing:case="test_ta_function_macdFix_use_ticks1_contextby"
tickTB=loadText(DATA_DIR+"/ticks1.csv")

tick1=exec ta::macdFix(close,10) from tickTB where sym=`tick1
rs1=([nan, nan, nan, nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan, nan, nan, nan])
assert 1, eqObj(tick1, rs1, precision)

tick2=exec ta::macdFix(close,10) from tickTB where sym=`tick2
rs2=([        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
        -0.20655524, -0.23960443, -0.3581438 , -0.51481627, -0.59170831,
        -0.65075796, -0.73186472, -0.77015143, -0.78859015, -0.75821596,
        -0.76630432, -0.71529287, -0.67163807, -0.62900856, -0.54791476,
        -0.44949072, -0.36479805, -0.29635445, -0.21670669, -0.15689569,
        -0.01210421,  0.12062426,  0.195875  ,  0.2610873 ,  0.34767324,
         0.42534011,  0.45837061,  0.48143417,  0.49040176,  0.51293551,
         0.50013214,  0.47243901,  0.48360035,  0.50343544,  0.49236714,
         0.49387555,  0.51425545,  0.51999376,  0.51115558,  0.38595607,
         0.22242594,  0.12359808,  0.04525421, -0.05735278, -0.1216323 ,
        -0.18430371, -0.23000569, -0.29935131, -0.3572566 , -0.4475155 ,
        -0.51494701, -0.58317188, -0.590503  , -0.55737393, -0.55355575,
        -0.5248262 , -0.5113333 , -0.479972  , -0.4454145 , -0.42598275],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
         0.18421695,  0.10715852,  0.0225581 , -0.07514633, -0.16906669,
        -0.25664692, -0.34305016, -0.42070493, -0.48759315, -0.5367973 ,
        -0.57852585, -0.60339258, -0.61580085, -0.61820225, -0.60542271,
        -0.57707144, -0.53847628, -0.49445413, -0.44395459, -0.39176206,
        -0.32273336, -0.24212289, -0.16248691, -0.08547342, -0.00671948,
         0.07183681,  0.14211568,  0.20380995,  0.25591755,  0.30264809,
         0.33855428,  0.36289696,  0.38484303,  0.40640529,  0.42203471,
         0.43509669,  0.44948919,  0.4623082 ,  0.47118954,  0.45569255,
         0.41328044,  0.36061092,  0.30327333,  0.23770495,  0.1723709 ,
         0.10752097,  0.04615249, -0.01666638, -0.07859188, -0.1456689 ,
        -0.21281037, -0.28014883, -0.33657686, -0.37672178, -0.40887341,
        -0.42995574, -0.44475166, -0.45115536, -0.45011156, -0.44572451],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
        -0.3907722 , -0.34676295, -0.3807019 , -0.43966993, -0.42264162,
        -0.39411104, -0.38881456, -0.34944649, -0.300997  , -0.22141866,
        -0.18777847, -0.11190029, -0.05583722, -0.01080631,  0.05750795,
         0.12758072,  0.17367823,  0.19809967,  0.2272479 ,  0.23486638,
         0.31062915,  0.36274715,  0.35836191,  0.34656071,  0.35439272,
         0.3535033 ,  0.31625492,  0.27762422,  0.23448421,  0.21028742,
         0.16157786,  0.10954205,  0.09875732,  0.09703016,  0.07033242,
         0.05877887,  0.06476626,  0.05768556,  0.03996604, -0.06973648,
        -0.1908545 , -0.23701283, -0.25801913, -0.29505773, -0.29400321,
        -0.29182469, -0.27615818, -0.28268493, -0.27866472, -0.3018466 ,
        -0.30213663, -0.30302305, -0.25392614, -0.18065215, -0.14468234,
        -0.09487046, -0.06658164, -0.02881665,  0.00469707,  0.01974176])
assert 2, eqObj(tick2, rs2, precision)

tick3=exec ta::macdFix(close,10) from tickTB where sym=`tick3
rs3=([nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan],
       [nan, nan, nan, nan, nan])
assert 3, eqObj(tick3, rs3,precision)

tick4=exec ta::macdFix(close,10) from tickTB where sym=`tick4
rs4=([        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan, -0.30710057,
        -0.28474328, -0.25796149, -0.20100225, -0.15020677, -0.08007899,
        -0.01954014, -0.00547164, -0.03109873, -0.03514817, -0.04768662,
        -0.10575851, -0.14947774, -0.25567037, -0.39628803, -0.45814042,
        -0.44911778, -0.44072116, -0.43966121, -0.44213163, -0.37160001,
        -0.38621403, -0.3776094 , -0.3778459 , -0.42703108, -0.52014883,
        -0.60326099, -0.63332123, -0.64008124, -0.68319538, -0.69965792,
        -0.69123045, -0.733078  , -0.74198351, -0.75863816, -0.78344819,
        -0.83314129, -0.86583965, -0.88405804, -0.86593659, -0.79544682,
        -0.73407546, -0.68881388, -0.6387278 , -0.56816194, -0.48753771,
        -0.42541211, -0.39127997, -0.31954167, -0.23479259, -0.17976721,
        -0.15623113, -0.12096828, -0.09488197, -0.09205419, -0.09254524,
        -0.13539019, -0.16305389, -0.18222013, -0.1907396 , -0.18854221,
        -0.13369342, -0.0943145 , -0.09004179, -0.1074194 , -0.11537408],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan, -0.55468486,
        -0.50560457, -0.46057856, -0.41338287, -0.36553267, -0.313632  ,
        -0.26016075, -0.21385364, -0.18062548, -0.15417506, -0.13481352,
        -0.12953079, -0.13315751, -0.15543258, -0.19922448, -0.2463001 ,
        -0.28317604, -0.31182061, -0.33506436, -0.35453113, -0.35763457,
        -0.36283083, -0.36551784, -0.36775931, -0.37853599, -0.40428378,
        -0.44046146, -0.47552687, -0.50544585, -0.53776394, -0.56719921,
        -0.58975034, -0.61580992, -0.63875057, -0.66054831, -0.68289375,
        -0.71021148, -0.73850751, -0.76497124, -0.78332858, -0.7855319 ,
        -0.77617618, -0.76029213, -0.73818952, -0.70727542, -0.66732311,
        -0.62333929, -0.58114668, -0.53358214, -0.47925676, -0.42480412,
        -0.37597266, -0.32960823, -0.28693073, -0.25149863, -0.22259801,
        -0.20674205, -0.19879875, -0.19578445, -0.19486721, -0.19371721,
        -0.18280379, -0.16671483, -0.15277428, -0.14452794, -0.13922724],
       [        nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,  0.24758429,
         0.2208613 ,  0.20261707,  0.21238062,  0.2153259 ,  0.23355301,
         0.24062061,  0.208382  ,  0.14952674,  0.11902689,  0.0871269 ,
         0.02377229, -0.01632023, -0.10023779, -0.19706355, -0.21184032,
        -0.16594174, -0.12890055, -0.10459685, -0.08760049, -0.01396545,
        -0.0233832 , -0.01209155, -0.01008659, -0.04849509, -0.11586505,
        -0.16279953, -0.15779436, -0.13463539, -0.14543144, -0.13245871,
        -0.1014801 , -0.11726808, -0.10323294, -0.09808984, -0.10055445,
        -0.12292981, -0.12733214, -0.11908679, -0.08260801, -0.00991492,
         0.04210072,  0.07147825,  0.09946172,  0.13911348,  0.1797854 ,
         0.19792718,  0.18986672,  0.21404047,  0.24446417,  0.24503691,
         0.21974154,  0.20863995,  0.19204876,  0.15944444,  0.13005278,
         0.07135186,  0.03574485,  0.01356433,  0.00412761,  0.00517499,
         0.04911037,  0.07240033,  0.06273248,  0.03710853,  0.02385315])
assert 4, eqObj(tick4, rs4, precision)

tick5=exec ta::macdFix(close,10) from tickTB where sym=`tick5
rs5=([            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan, -3.42938848e-01, -3.13396813e-01,
        -2.82143673e-01, -2.49146776e-01, -1.96400064e-01,
        -1.49718461e-01, -1.08330718e-01, -6.78208850e-02,
        -4.49570435e-02, -3.77245814e-02,  1.38634350e-03,
         5.12171181e-03, -2.04989741e-02, -4.94126249e-02,
        -1.34590091e-01, -2.51046735e-01, -3.12786496e-01,
        -3.30060534e-01, -3.36179066e-01, -3.55207748e-01,
        -3.45922961e-01, -3.40731164e-01, -3.69565888e-01,
        -3.72329574e-01, -3.94313814e-01, -4.31162893e-01,
        -4.58284898e-01, -4.61703870e-01, -4.29947868e-01,
        -3.88892797e-01, -4.00988205e-01, -3.93237101e-01,
        -3.66218879e-01, -3.82105839e-01, -3.79048271e-01,
        -3.89629964e-01, -4.38566484e-01, -5.07358950e-01,
        -5.52739238e-01, -6.03201173e-01, -6.20340856e-01,
        -5.84838097e-01, -5.53344625e-01, -5.29857755e-01,
        -4.97930304e-01, -4.53725629e-01, -3.99615291e-01,
        -3.41325365e-01, -3.14155000e-01, -2.81758058e-01,
        -2.65866183e-01, -2.46630202e-01, -1.81481323e-01,
        -7.64663511e-02, -1.02880833e-02,  1.93603208e-02,
         9.57035748e-02,  1.80151793e-01,  2.36272497e-01,
         2.31989335e-01,  2.25261819e-01,  1.97938114e-01,
         1.79478047e-01,  1.65944691e-01,  1.36187212e-01,
         1.19508289e-01],
       [            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan, -5.50114624e-01, -5.07075022e-01,
        -4.66178413e-01, -4.26718115e-01, -3.84842106e-01,
        -3.42092352e-01, -2.99590237e-01, -2.57450355e-01,
        -2.18815207e-01, -1.85889639e-01, -1.51839460e-01,
        -1.23301065e-01, -1.04609776e-01, -9.45739304e-02,
        -1.01849596e-01, -1.28976349e-01, -1.62396375e-01,
        -1.92880768e-01, -2.18935004e-01, -2.43711866e-01,
        -2.62295702e-01, -2.76556695e-01, -2.93467457e-01,
        -3.07806024e-01, -3.23534713e-01, -3.43103473e-01,
        -3.64045550e-01, -3.81801608e-01, -3.90555474e-01,
        -3.90253169e-01, -3.92204994e-01, -3.92392650e-01,
        -3.87633782e-01, -3.86628701e-01, -3.85250441e-01,
        -3.86046718e-01, -3.95595767e-01, -4.15916345e-01,
        -4.40793235e-01, -4.70321951e-01, -4.97598116e-01,
        -5.13459930e-01, -5.20711693e-01, -5.22374613e-01,
        -5.17930193e-01, -5.06256636e-01, -4.86867301e-01,
        -4.60405131e-01, -4.33814198e-01, -4.06167627e-01,
        -3.80658273e-01, -3.56289533e-01, -3.24506222e-01,
        -2.79408064e-01, -2.30477158e-01, -1.85052162e-01,
        -1.34005664e-01, -7.68861267e-02, -1.99481951e-02,
         2.58586285e-02,  6.21137540e-02,  8.68090921e-02,
         1.03657993e-01,  1.14982847e-01,  1.18838186e-01,
         1.18960023e-01],
       [            nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,             nan,             nan,
                    nan,  2.07175776e-01,  1.93678209e-01,
         1.84034740e-01,  1.77571339e-01,  1.88442042e-01,
         1.92373891e-01,  1.91259519e-01,  1.89629470e-01,
         1.73858164e-01,  1.48165058e-01,  1.53225804e-01,
         1.28422777e-01,  8.41108020e-02,  4.51613055e-02,
        -3.27404949e-02, -1.22070386e-01, -1.50390120e-01,
        -1.37179767e-01, -1.17244062e-01, -1.11495881e-01,
        -8.36272592e-02, -6.41744693e-02, -7.60984311e-02,
        -6.45235501e-02, -7.07791011e-02, -8.80594196e-02,
        -9.42393477e-02, -7.99022612e-02, -3.93923938e-02,
         1.36037154e-03, -8.78321092e-03, -8.44451560e-04,
         2.14149035e-02,  4.52286269e-03,  6.20217076e-03,
        -3.58324623e-03, -4.29707176e-02, -9.14426045e-02,
        -1.11946003e-01, -1.32879222e-01, -1.22742741e-01,
        -7.13781670e-02, -3.26329317e-02, -7.48314151e-03,
         1.99998897e-02,  5.25310070e-02,  8.72520101e-02,
         1.19079766e-01,  1.19659197e-01,  1.24409569e-01,
         1.14792090e-01,  1.09659331e-01,  1.43024900e-01,
         2.02941713e-01,  2.20189075e-01,  2.04412483e-01,
         2.29709239e-01,  2.57037920e-01,  2.56220692e-01,
         2.06130706e-01,  1.63148065e-01,  1.11129022e-01,
         7.58200538e-02,  5.09618439e-02,  1.73490261e-02,
         5.48265616e-04])
assert 5, eqObj(tick5,rs5, 3)

maBySym=(exec ta::macdFix(close,10)[0] as rs0, ta::macdFix(close,10)[1] as rs1, ta::macdFix(close,10)[2] as rs2  from tickTB context by sym ).values()
rs00=rs1[0].join(rs2[0]).join(rs3[0]).join(rs4[0]).join(rs5[0])
rs01=rs1[1].join(rs2[1]).join(rs3[1]).join(rs4[1]).join(rs5[1])
rs02=rs1[2].join(rs2[2]).join(rs3[2]).join(rs4[2]).join(rs5[2])
assert 6, eqObj(maBySym, (rs00,rs01,rs02), 3)


@testing:case="test_ta_function_macdFix_ma0"
//50 periods' trading data
close=[1.31096941, 1.30264238, 1.61113023, 1.74477774, 1.19229174,
    1.18422834, 1.22975697, 0.90955086, 0.74515876, 1.60267403,
    1.09760499, 1.91491583, 1.44797879, 0.92671249, 1.650166  ,
    1.30611495, 1.80538802, 1.91171602, 1.08399228, 1.43340616,
    1.00901357, 0.52186359, 1.71815048, 1.21787024, 1.10927426,
    0.78267631, 1.6849011 , 1.32163081, 0.79079304, 1.7044885 ,
    1.03517974, 1.40655617, 0.97886921, 1.19654829, 1.10061065,
    0.88445782, 1.08063318, 1.7860779 , 1.65480217, 1.50524881,
    1.14990589, 1.58424086, 1.51309666, 0.74424052, 1.52159503,
    0.90795193, 1.96280945, 1.57893685, 1.00704181, 1.56333563]
    
precision=6
signalPeriod=9

//null value still have problems
ans =[  NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL,         NULL,         NULL,         NULL,
     NULL,         NULL, 		NULL,   -0.02749209, -0.03641395,
    -0.05923057, -0.06179064, -0.0102    ,  0.02063222,  0.03342543,
     0.01645734,  0.03550616,  0.04474803, -0.00615317,  0.01219657,
    -0.01953639,  0.03484766,  0.04842465,  0.01566265,  0.03144936]
rs=ta::macdFix(close, signalPeriod)[0]
assert 1, eqObj(rs,ans, precision)