#include "setup/settings.txt"
use ta

@testing:case="test_ta_function_stochRsi_args_14_5_3_0"
close = [100.243874,99.677051,100.676061,98.729214,99.811684,101.812203,99.706868,98.214068,99.034305,101.39895,99.739858,98.857177,100.976889,98.488709,99.175023,99.511593,99.997514,99.617737,100.372465,100.106315,100.600162,100.382803,100.136037,100.630854,99.995787,99.57589,102.56802,100.004189,99.821923,102.296099,100.156529,100.320803,101.438503,100.210978,98.201,99.909849,99.709805,100.728769,100.236768,99.456067]
fastk, fastd = stochRsi(close, 14, 5, 3, 0)
outk = [100., 74.56129247, 0., 100., 0., 0., 100., 13.44984992, 7.92902571, 80.08681019, 8.46386166, 17.39422784, 61.9987695, 0., 0., 56.00646286, 49.94940243, 100., 80.02045925, 0.]
outd = [89.02558002, 80.54601084, 58.18709749, 58.18709749, 33.33333333, 33.33333333, 33.33333333, 37.81661664, 40.45962521, 33.82189528, 32.15989919, 35.31496656, 29.28561967, 26.46433245, 20.6662565, 18.66882095, 35.31862176, 68.65195509, 76.65662056, 60.00681975]
assert 1, eqObj(fastk[20:], outk, 6)
assert 2, eqObj(fastd[20:], outd, 6)

@testing:case="test_ta_function_stochRsi_args_14_5_3_0_starting_NULL"
close = [NULL,NULL,NULL,100.243874,99.677051,100.676061,98.729214,99.811684,101.812203,99.706868,98.214068,99.034305,101.39895,99.739858,98.857177,100.976889,98.488709,99.175023,99.511593,99.997514,99.617737,100.372465,100.106315,100.600162,100.382803,100.136037,100.630854,99.995787,99.57589,102.56802,100.004189,99.821923,102.296099,100.156529,100.320803,101.438503,100.210978,98.201,99.909849,99.709805,100.728769,100.236768,99.456067]
fastk, fastd = stochRsi(close, 14, 5, 3, 0)
outk = [100., 74.56129247, 0., 100., 0., 0., 100., 13.44984992, 7.92902571, 80.08681019, 8.46386166, 17.39422784, 61.9987695, 0., 0., 56.00646286, 49.94940243, 100., 80.02045925, 0.]
outd = [89.02558002, 80.54601084, 58.18709749, 58.18709749, 33.33333333, 33.33333333, 33.33333333, 37.81661664, 40.45962521, 33.82189528, 32.15989919, 35.31496656, 29.28561967, 26.46433245, 20.6662565, 18.66882095, 35.31862176, 68.65195509, 76.65662056, 60.00681975]
assert 1, eqObj(fastk[23:], outk, 6)
assert 2, eqObj(fastd[23:], outd, 6)

@testing:case="test_ta_function_stochRsi_args_10_3_5_1"
close = [100.243874,99.677051,100.676061,98.729214,99.811684,101.812203,99.706868,98.214068,99.034305,101.39895,99.739858,98.857177,100.976889,98.488709,99.175023,99.511593,99.997514,99.617737,100.372465,100.106315,100.600162,100.382803,100.136037,100.630854,99.995787,99.57589,102.56802,100.004189,99.821923,102.296099,100.156529,100.320803,101.438503,100.210978,98.201,99.909849,99.709805,100.728769,100.236768,99.456067]
fastk, fastd = stochRsi(close, 10, 3, 5, 1)
outk = [100., 17.3463403, 100., 60.92127055, 100., 48.08711331, 0., 100., 0., 0., 100., 12.95571225, 0., 100., 9.69776802, 7.3179052, 100., 0., 0., 99.2651135, 89.43408061, 100., 48.39690487, 0.]
outd = [66.08748194, 49.84043473, 66.56028982, 64.68061673, 76.45374449, 66.99820076, 44.66546717, 63.11031145, 42.07354097, 28.04902731, 52.03268487, 39.00702733, 26.00468489, 50.66978993, 37.01244929, 27.11426793, 51.40951195, 34.27300797, 22.84867198, 48.32081915, 62.02523964, 74.68349309, 65.92129702, 43.94753135]
assert 1, eqObj(fastk[16:], outk, 6)
assert 2, eqObj(fastd[16:], outd, 6)

@testing:case="test_ta_function_stochrsi_context_by"
precision = 6
tickTB = loadText(DATA_DIR+"/ticks1.csv")
rsidx = (exec sym, rsi(close, 14) as rsi from tickTB context by sym)
tmp = (exec sym, rsi, ifirstNot(rsi) as d from rsidx context by sym)
fastk = (exec stochRsi(close, 14, 5, 3, 0)[0] as fastk from tickTB context by sym).fastk
fastd = (exec stochRsi(close, 14, 5, 3, 0)[1] as fastd from tickTB context by sym).fastd

outk = [00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,93.373582,83.808997,100,100,22.473522,0,0,0,3.02261,0,0,0,91.521584,100,100,62.230263,0,0,30.988059,35.590736,25.32164,72.966225,75.380367,100,50.531692,100,94.008916,94.567756,100,100,100,96.587923,100,73.321798,100,100,65.312926,72.26784,100,100,32.391241,25.977579,0,56.690268,0,0,72.042926,100,40.259477,69.851078,100,80.864122,47.835641,0,0,18.41661,20.074632,9.359112,63.299983,23.827194,29.899667,0,0,0,0,0,100,100,75.935114,100,68.160745,100,100,47.690914,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,42.499489,13.514929,87.515884,100,100,100,73.049586,100,100,100,100,0,0,12.739298,40.105677,46.010973,88.940759,100,100,100,100,0,0,21.261192,8.394152,0,1.6533,0,0,57.809458,100,97.418432,89.911099,67.819337,100,14.982832,36.318699,23.997632,0,0,0,38.657556,96.835764,32.903904,59.536023,95.572771,0,51.70416,19.735578,0,0,0,0,100,100,97.244124,86.578892,94.554159,100,100,87.76853,45.175112,100,100,76.640435,42.567728,40.462719,31.735257,0,0,0,8.882715,15.036656,32.061425,100,100,91.598301,45.304638,0.237834,9.384934,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,49.378882,33.269779,0,100,100,100,100,55.745566,100,100,49.074177,100,100,0,5.736586,42.437624,54.031022,100,100,100,100,100,0,0,100,8.360937,0,0,0,0,36.003233,77.176435,100,80.436302,100,78.500032,0,56.704926,3.035429,0,0,47.584027,100,100,39.313748,48.240904,83.035701,2.626317,41.461452,0,0,0,6.062492,0,77.230719,100,96.817133,88.552506,100,100,100,100,49.159192,51.903747,0,18.137972,100,100,80.125776,53.635927,90.018892,100,83.494461,0.599819,0,0,7.201296,39.338431,0,48.333548]
outk.nullFill!(fastk)
outd = [00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,71.573104,91.583607,92.394193,94.602999,74.157841,40.824507,7.491174,2.368476E-15,1.007537,1.007537,1.007537,2.368476E-15,30.507195,63.840528,97.173861,87.410088,54.076754,20.743421,10.329353,22.192932,30.633478,44.6262,57.889411,82.782197,75.30402,83.510564,81.513536,96.192224,96.192224,98.189252,100,98.862641,98.862641,89.969907,91.107266,91.107266,88.437642,79.193589,79.193589,90.755947,77.463747,52.789607,19.456273,27.555949,18.896756,18.896756,24.014309,57.347642,70.767468,70.036852,70.036852,83.571734,76.233255,42.899921,15.945214,6.13887,12.830414,15.950118,30.911243,32.162096,39.008948,17.908954,9.966556,5.921189E-15,5.921189E-15,5.921189E-15,33.333333,66.666667,91.978371,91.978371,81.365286,89.386915,89.386915,82.563638,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,58.123633,52.004806,47.843434,67.010271,95.838628,100,91.016529,91.016529,91.016529,100,100,66.666667,33.333333,4.246433,17.614991,32.951982,58.352469,78.317244,96.313586,100,100,66.666667,33.333333,7.087064,9.885115,9.885115,3.349151,0.5511,0.5511,19.269819,52.603153,85.075963,95.77651,85.049623,85.910145,60.934056,50.433844,25.099721,20.105444,7.999211,4.144833E-14,12.885852,45.16444,56.132408,63.091897,62.670899,51.702931,49.09231,23.813246,23.813246,6.578526,3.315866E-14,3.315866E-14,33.333333,66.666667,99.081375,94.607672,92.792392,93.711017,98.18472,95.922843,77.647881,77.647881,81.725037,92.213478,73.069388,53.223628,38.255235,24.065992,10.578419,2.250052E-14,2.960905,7.973124,18.660266,49.032694,77.353808,97.199434,78.967646,45.713591,18.309135,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,00F,28.815051,39.452668,27.549554,44.42326,66.666667,100,100,85.248522,85.248522,85.248522,83.024726,83.024726,83.024726,66.666667,35.245529,16.05807,34.06841,65.489549,84.677007,100,100,100,66.666667,33.333333,33.333333,36.120312,36.120312,2.786979,-1.894781E-14,-1.894781E-14,12.001078,37.726556,71.059889,85.870912,93.478767,86.312111,59.500011,45.068319,19.913452,19.913452,1.01181,15.861342,49.194676,82.528009,79.771249,62.518217,56.863451,44.634307,42.37449,14.695923,13.820484,-2.368476E-14,2.020831,2.020831,27.764403,59.076906,91.349284,95.123213,95.123213,96.184169,100,100,83.053064,67.02098,33.687646,23.347239,39.379324,72.712657,93.375259,77.920568,74.593532,81.218273,91.171118,61.36476,28.031427,0.19994,2.400432,15.513242,15.513242,29.223993]
outd.nullFill!(fastd)
assert 1, eqObj(fastk, outk, precision)
assert 2, eqObj(fastd, outd, precision)
